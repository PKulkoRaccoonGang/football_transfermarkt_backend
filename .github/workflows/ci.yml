name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  POSTGRES_DB: football_transfermarkt
  POSTGRES_USER: myuser
  POSTGRES_PASSWORD: mypassword
  DATABASE_URL: postgresql://myuser:mypassword@localhost:5432/football_transfermarkt
  DJANGO_SETTINGS_MODULE: football_transfermarkt.settings

jobs:
  ruff:
    name: Run Ruff Linter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff
        run: ruff check .

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: football_transfermarkt
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U myuser -d football_transfermarkt"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to start
        run: |
          echo "Waiting for PostgreSQL..."
          sleep 10

      - name: Debug check PostgreSQL logs
        run: docker logs $(docker ps -q --filter "ancestor=postgres:15") || true

      - name: Run Migrations
        run: |
          source venv/bin/activate
          cd football_transfermarkt
          python manage.py migrate

      - name: Run Tests
        run: |
          source venv/bin/activate
          cd football_transfermarkt
          python manage.py test

  build:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/django-app:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/django-app:latest ${{ secrets.DOCKER_USERNAME }}/django-app:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/django-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/django-app:${{ github.sha }}
